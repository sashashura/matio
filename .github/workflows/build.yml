name: "Migration from travis"

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-macos:
    strategy:
      fail-fast: false
      matrix:
        include: 
          - compiler: clang
            ENABLE_EXTENDED_SPARSE: yes
            ENABLE_MAT73: yes
            WITH_ZLIB: yes
            HDF5_VERSION: 1.8
            HDF5_PATCH_VERSION: 23
            MAX_RANK: 3
        
    runs-on: macos-latest

    steps:
    - run: |
        #add-apt-repository ppa:ubuntu-toolchain-r/test
        apt-get update
        apt-get install -y linux-libc-dev texlive texinfo valgrind gcc-4.8-multilib g++-4.8 \
          wget make libssl-dev libcurl4-openssl-dev libexpat1-dev gettext python3-pip autoconf automake libtool-bin
        wget https://github.com/git/git/archive/v2.18.2.zip -O git.zip
        unzip git.zip
        rm git.zip
        cd git-*
        make prefix=/usr/local all
        make prefix=/usr/local install
        cd ..
        
    - uses: actions/checkout@v3
      with:
        fetch-depth: 5
        submodules: true
        
    - run: |
        echo "TRAVIS_OS_NAME=osx" >> $GITHUB_ENV
        arch=""
        if [ "$RUNNER_ARCH" = "ARM64" ]; then
          arch="arm64"
        elif [ "$RUNNER_ARCH" = "X64" ]; then
          arch="amd64"
        fi
        echo "TRAVIS_CPU_ARCH=$arch" >> $GITHUB_ENV
        echo "TRAVIS_BUILD_DIR=$GITHUB_WORKSPACE" >> $GITHUB_ENV
        echo "CC=${{matrix.compiler}}" >> $GITHUB_ENV
        echo "ENABLE_EXTENDED_SPARSE=${{matrix.ENABLE_EXTENDED_SPARSE}}" >> $GITHUB_ENV
        echo "ENABLE_MAT73=${{matrix.ENABLE_MAT73}}" >> $GITHUB_ENV
        echo "WITH_ZLIB=${{matrix.WITH_ZLIB}}" >> $GITHUB_ENV
        echo "HDF5_VERSION=${{matrix.HDF5_VERSION}}" >> $GITHUB_ENV
        echo "HDF5_PATCH_VERSION=${{matrix.HDF5_PATCH_VERSION}}" >> $GITHUB_ENV
        echo "MAX_RANK=${{matrix.MAX_RANK}}" >> $GITHUB_ENV
        echo "USE_CMAKE=${{matrix.USE_CMAKE}}" >> $GITHUB_ENV
        echo "USE_CONAN=${{matrix.USE_CONAN}}" >> $GITHUB_ENV

    - run: |
        ./.ci/travis_before_install.sh
        ./.ci/travis_install.sh
        ./.ci/travis_before_script.sh
        ./.ci/travis_script.sh
        ./.ci/travis_after_success.sh

  build-linux:
    strategy:
      fail-fast: false
      matrix:
        include: 
          - compiler: gcc-4.8
            ENABLE_EXTENDED_SPARSE: yes
            ENABLE_MAT73: yes
            WITH_ZLIB: $GITHUB_WORKSPACE/zlib
            HDF5_VERSION: 1.14
            HDF5_PATCH_VERSION: 1-2
            MAX_RANK: 3
            
          - compiler: gcc-4.8
            ENABLE_EXTENDED_SPARSE: yes
            ENABLE_MAT73: yes
            WITH_ZLIB: $GITHUB_WORKSPACE/zlib
            HDF5_VERSION: 1.12
            HDF5_PATCH_VERSION: 2
            MAX_RANK: 3

          - compiler: gcc-4.8
            ENABLE_EXTENDED_SPARSE: yes
            ENABLE_MAT73: yes
            WITH_ZLIB: $GITHUB_WORKSPACE/zlib
            HDF5_VERSION: 1.10
            HDF5_PATCH_VERSION: 10
            MAX_RANK: 3

          - compiler: gcc-4.8
            ENABLE_EXTENDED_SPARSE: yes
            ENABLE_MAT73: yes
            WITH_ZLIB: yes
            HDF5_VERSION: 1.8
            HDF5_PATCH_VERSION: 23
            MAX_RANK: 3

          - compiler: gcc-4.8
            ENABLE_EXTENDED_SPARSE: yes
            ENABLE_MAT73: yes
            WITH_ZLIB: yes
            HDF5_VERSION: 1.8
            HDF5_PATCH_VERSION: 23
            MAX_RANK: 1

          - compiler: gcc-4.8
            ENABLE_EXTENDED_SPARSE: yes
            ENABLE_MAT73: yes
            WITH_ZLIB: no
            HDF5_VERSION: 1.8
            HDF5_PATCH_VERSION: 23
            MAX_RANK: 3

          - compiler: gcc-4.8
            ENABLE_EXTENDED_SPARSE: yes
            ENABLE_MAT73: no
            WITH_ZLIB: yes
            HDF5_VERSION: 1.8
            HDF5_PATCH_VERSION: 23
            MAX_RANK: 3

          - compiler: gcc-4.8
            ENABLE_EXTENDED_SPARSE: yes
            ENABLE_MAT73: no
            WITH_ZLIB: no
            HDF5_VERSION: 1.8
            HDF5_PATCH_VERSION: 23
            MAX_RANK: 3

          - compiler: gcc-4.8
            ENABLE_EXTENDED_SPARSE: no
            ENABLE_MAT73: yes
            WITH_ZLIB: yes
            HDF5_VERSION: 1.8
            HDF5_PATCH_VERSION: 23
            MAX_RANK: 3

          - compiler: gcc-4.8
            ENABLE_EXTENDED_SPARSE: no
            ENABLE_MAT73: yes
            WITH_ZLIB: no
            HDF5_VERSION: 1.8
            HDF5_PATCH_VERSION: 23
            MAX_RANK: 3

          - compiler: gcc-4.8
            ENABLE_EXTENDED_SPARSE: no
            ENABLE_MAT73: no
            WITH_ZLIB: yes
            HDF5_VERSION: 1.8
            HDF5_PATCH_VERSION: 23
            MAX_RANK: 3

          - compiler: gcc-4.8
            ENABLE_EXTENDED_SPARSE: no
            ENABLE_MAT73: no
            WITH_ZLIB: no
            HDF5_VERSION: 1.8
            HDF5_PATCH_VERSION: 23
            MAX_RANK: 3

          - compiler: gcc-4.8
            USE_CMAKE: yes
            ENABLE_EXTENDED_SPARSE: yes
            ENABLE_MAT73: yes
            WITH_ZLIB: yes
            HDF5_VERSION: 1.10
            HDF5_PATCH_VERSION: 10
            MAX_RANK: 3

          - compiler: gcc-4.8
            USE_CMAKE: yes
            USE_CONAN: yes
            ENABLE_EXTENDED_SPARSE: yes
            ENABLE_MAT73: yes
            WITH_ZLIB: yes
            
          - compiler: clang
            ENABLE_EXTENDED_SPARSE: yes
            ENABLE_MAT73: yes
            WITH_ZLIB: yes
            HDF5_VERSION: 1.8
            HDF5_PATCH_VERSION: 23
            MAX_RANK: 3
        
    runs-on: ubuntu-latest
    container: ubuntu:16.04

    steps:
    - run: |
        #add-apt-repository ppa:ubuntu-toolchain-r/test
        apt-get update
        apt-get install -y linux-libc-dev texlive texinfo valgrind gcc-4.8-multilib g++-4.8 \
          wget make libssl-dev libcurl4-openssl-dev libexpat1-dev gettext python3-pip autoconf automake libtool-bin cmake
        wget https://github.com/git/git/archive/v2.18.2.zip -O git.zip
        unzip git.zip
        rm git.zip
        cd git-*
        make prefix=/usr/local all
        make prefix=/usr/local install
        cd ..
        
    - uses: actions/checkout@v3
      with:
        fetch-depth: 5
        submodules: true
        
    - run: |
        echo "TRAVIS_OS_NAME=linux" >> $GITHUB_ENV
        arch=""
        if [ "$RUNNER_ARCH" = "ARM64" ]; then
          arch="arm64"
        elif [ "$RUNNER_ARCH" = "X64" ]; then
          arch="amd64"
        fi
        echo "TRAVIS_CPU_ARCH=$arch" >> $GITHUB_ENV
        echo "TRAVIS_BUILD_DIR=$GITHUB_WORKSPACE" >> $GITHUB_ENV
        echo "CC=${{matrix.compiler}}" >> $GITHUB_ENV
        echo "ENABLE_EXTENDED_SPARSE=${{matrix.ENABLE_EXTENDED_SPARSE}}" >> $GITHUB_ENV
        echo "ENABLE_MAT73=${{matrix.ENABLE_MAT73}}" >> $GITHUB_ENV
        echo "WITH_ZLIB=${{matrix.WITH_ZLIB}}" >> $GITHUB_ENV
        echo "HDF5_VERSION=${{matrix.HDF5_VERSION}}" >> $GITHUB_ENV
        echo "HDF5_PATCH_VERSION=${{matrix.HDF5_PATCH_VERSION}}" >> $GITHUB_ENV
        echo "MAX_RANK=${{matrix.MAX_RANK}}" >> $GITHUB_ENV
        echo "USE_CMAKE=${{matrix.USE_CMAKE}}" >> $GITHUB_ENV
        echo "USE_CONAN=${{matrix.USE_CONAN}}" >> $GITHUB_ENV

    - run: |
        ./.ci/travis_before_install.sh
        ./.ci/travis_install.sh
        ./.ci/travis_before_script.sh
        ./.ci/travis_script.sh
        ./.ci/travis_after_success.sh
